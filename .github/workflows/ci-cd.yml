name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Build Docker images
      run: docker-compose build

    - name: Copy files to EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          # Remove the existing app folder if it exists
          if [ -d "/home/$EC2_USER/app" ]; then
            rm -rf /home/$EC2_USER/app
          fi
        EOF
        scp -o StrictHostKeyChecking=no -i private_key.pem -r ./* $EC2_USER@$EC2_HOST:/home/$EC2_USER/app
        rm private_key.pem

    - name: Deploy to EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_HOST << 'EOF'
          # Ensure the app directory exists and is owned by the correct user
          sudo mkdir -p /home/ubuntu/app
          sudo chown -R ubuntu:ubuntu /home/ubuntu/app

          # Install Docker if not installed          # Install Docker if not installed
          if ! command -v docker &> /dev/null; thenll; then
            sudo apt-get update
            sudo apt-get install -y docker.iol -y docker.io
          fi

          # Add user to the Docker group          # Add user to the Docker group
          sudo usermod -aG docker ubuntu
          newgrp docker

          # Install Docker Compose if not installed          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; thenll; then
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          cd /home/ubuntu/app          cd /home/$EC2_USER/app

          # Ensure docker-compose.yml exists          # Ensure docker-compose.yml exists
          if [ ! -f docker-compose.yml ]; thenen
            echo "Error: docker-compose.yml not found in /home/ubuntu/app"t found in /home/$EC2_USER/app"
            exit 1
          fi

          docker-compose down          docker-compose down
          docker-compose up -dd

          # Install Nginx if not installed          # Install Nginx if not installed
          if ! command -v nginx &> /dev/null; thenll; then
            sudo apt-get update
            sudo apt-get install -y nginxl -y nginx
          fi

          # Ensure nginx.conf exists          # Ensure nginx.conf exists
          if [ ! -f /home/ubuntu/app/nginx/nginx.conf ]; thenapp/nginx/nginx.conf ]; then
            echo "Error: nginx.conf not found in /home/ubuntu/app/nginx"/app/nginx"
            exit 1
          fi

          # Copy Nginx configuration          # Copy Nginx configuration
          sudo cp /home/ubuntu/app/nginx/nginx.conf /etc/nginx/nginx.confp/nginx/nginx.conf /etc/nginx/nginx.conf

          # Restart Nginx          # Restart Nginx
          sudo systemctl restart nginxrestart nginx
        EOF
        rm private_key.pemprivate_key.pem
