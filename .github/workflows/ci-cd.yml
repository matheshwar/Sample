name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

    - name: Build and Push Backend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Executing remote SSH commands on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: DOCKER_USERNAME, DOCKER_PASSWORD
        script: |
          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
          fi

          # Add user to Docker group
          sudo usermod -aG docker ubuntu
          newgrp docker

          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; then
            sudo apt-get update -y
            sudo apt-get install -y docker-compose
          fi

          # Navigate to the deployment directory
          cd /home/ubuntu

          # Clone the repository if it doesn't exist
          if [ ! -d "Sample" ]; then
            git clone https://github.com/matheshwar/Sample.git Sample
          fi

          # Pull the latest changes
          cd Sample
          git pull origin main

          # Login to Docker Hub
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

          # Pull the latest Docker images and restart services
          docker-compose pull
          docker-compose down
          docker-compose up -d --build
